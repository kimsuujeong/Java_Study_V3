package JAVA_240115.Interface_02;

public interface interface2 {
	// 인터페이스와 다형성
	// 인터페이스 타입의 참조변수로 인터페이스를 구현한 클래스의
	// 인스턴스를 참조가 가능.
	
	// 인터페이스를 파라미터 타입으로 설정하는것도 가능.
	// 조건 : 파라미터로 올 수 있는 것은 인터페이스를 구현한 클래스만 가능
	
	// 인터페이스의 장점
	// 1. 개발시간의 단축
	// - 선언과 구현을 각각 나눠서 구현메서드를 작성하는 
	// 	 개발자들이 작업하기가 용이
	// 	 (독립적인 프로그래밍이 가능)
	// 2. 표준화가 가능하다
	// 3. 서로 관계 없는 클래스를 간접적인 관계를 형성할 수 있다.
	// 
	
	// 현업에서 많이쓰는 것과 쓰지 않는 것의 차이
	// 1. 가독성
	// 2. 유지 보수성
	// 3. 확장성 + 재사용성
	// 이 중 2개 이상 만족하지 못하면 안쓸 가능성이 높음
	// 또한 금전적으로 이득이 어느정도인지 -> 시간 단축
	public static void main(String[] args) {
		A gunchim1 = new A();
		B gunchim2 = new B();
		C gunchim3 = new C();
		
		gunchim1.gunchim(gunchim3);
	}
}
 